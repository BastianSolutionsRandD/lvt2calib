<launch>
  <!-- <param name="use_sim_time" value="true"/> -->
  <param name="use_sim_time" value="false"/>
  <param name="do_acc_boards" type="bool" value="false"/>
  <param name="pause_process" type="bool" value="false"/>
  <param name="rgb_depth_calibration/end_process" type="bool" value="false"/>
  <param name="livox_paused" type="bool" value="false"/>

  <!-- <param name="max_frame" type="int" value="10" default="60"/> -->

  <arg name="depth_camera_name" default="vmpr"/>

  <arg name="stdout" default="screen"/>
  <arg name="cloud_tp" default="/$(arg depth_camera_name)_camera_depth/points"/>
  <!-- <arg name="cloud_tp" default="/sick_visionary_t_mini/points"/> -->
  <arg name="use_RG_Pseg" default="false"/>
  <arg name="use_passthrough_preprocess" default="true"/>
  <arg name="ns_" default="depth_camera"/>
  <arg name="cluster_tole" default="0.05"/>
  <arg name="rmse_ukn2tpl_thre" default="0.05"/>
  <arg name="rmse_tpl2ukn_thre" default="0.03"/>

  <arg name="source_frame" default="$(arg depth_camera_name)_camera_depth_optical_frame"/>
  <!-- <arg name="source_frame" default="sick_visionary_t_mini_depth_optical_frame"/> -->
  <arg name="target_frame" default="eoat"/>

  <group ns="$(arg ns_)">
    <group if="$(arg use_passthrough_preprocess)">

      <!-- Transform point cloud to a frame where you want to define filter ranges -->
      <node pkg="lvt2calib" type="pc_transform" name="pc_transform_pre_filtered" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)" />
        <remap from="~output" to="$(arg cloud_tp)/transformed" />
        <param name="target_frame" type="string" value="$(arg target_frame)"/>
      </node>

      <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="$(arg stdout)"/>

      <node pkg="nodelet" type="nodelet" name="pass_through_x" args="load pcl/PassThrough pcl_manager" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)/transformed" />
        <remap from="~output" to="$(arg cloud_tp)/x_filtered" />
        <rosparam>
          filter_field_name: x
          filter_limit_min: -0.1
          filter_limit_max: 0.2
          filter_limit_negative: False
          max_queue_size: 1
          keep_organized: False
        </rosparam>
      </node>

      <node pkg="nodelet" type="nodelet" name="pass_through_y" args="load pcl/PassThrough pcl_manager" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)/x_filtered" />
        <remap from="~output" to="$(arg cloud_tp)/y_filtered" />
        <rosparam>
          filter_field_name: y
          filter_limit_min: -0.52
          filter_limit_max: 0.42

          filter_limit_negative: False
          max_queue_size: 1
          keep_organized: False
        </rosparam>
      </node>

      <node pkg="nodelet" type="nodelet" name="pass_through_z" args="load pcl/PassThrough pcl_manager" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)/y_filtered" />
        <remap from="~output" to="$(arg cloud_tp)/z_filtered" />
        <rosparam>
          filter_field_name: z
          filter_limit_min: -0.8
          filter_limit_max: -0.13

          filter_limit_negative: False
          max_queue_size: 1
          keep_organized: False
        </rosparam>
      </node>

      <!-- Transform point cloud back to its original frame -->
      <node pkg="lvt2calib" type="pc_transform" name="pc_transform_post_filtered" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)/z_filtered" />
        <remap from="~output" to="$(arg cloud_tp)/pre_transformed" />
        <param name="target_frame" type="string" value="$(arg source_frame)"/>
      </node>
    </group>
    
    <node pkg="lvt2calib" type="livox_pattern" name="laser_pattern" output="screen">
      <remap from="~cloud_laser" to="$(arg cloud_tp)/pre_transformed" if="$(arg use_passthrough_preprocess)"/>
      <remap from="~cloud_laser" to="$(arg cloud_tp)" unless="$(arg use_passthrough_preprocess)"/>

      <param name="model_path" type="string" value="$(find lvt2calib)/data/template_pcl/output_boundary.pcd"/>
      <!-- <param name="model_path" type="string" value="$(find lvt2calib)/data/template_pcl/four_circle_boundary.pcd"/> -->

      <param name="is_gazebo" type="bool" value="false"/>

      <param name="use_vox_filter" type="bool" value="true"/>
      <param name="use_gauss_filter" type="bool" value="false"/>
      <param name="use_statistic_filter" type="bool" value="false"/>
      <param name="use_i_filter" type="bool" value="false"/>
      <param name="use_gauss_filter2" type="bool" value="false"/>
      <param name="queue_size" type="int" value="2"/>
      <param name="use_RG_Pseg" type="bool" value="$(arg use_RG_Pseg)"/>
      <param name="ns" type="string" value="$(arg ns_)"/>

      <rosparam command="load" file="$(find lvt2calib)/config/lidar_pattern_param.yaml"/>
      <param name="cluster_tole" value="$(arg cluster_tole)"/>
      <param name="rmse_ukn2tpl_thre" value="$(arg rmse_ukn2tpl_thre)"/>
      <param name="rmse_tpl2ukn_thre" value="$(arg rmse_tpl2ukn_thre)"/>
    </node>

  </group>

</launch>
